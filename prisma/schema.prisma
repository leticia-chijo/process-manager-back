generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Area {
  id    Int    @id @default(autoincrement())
  name  String
  teams Team[]
}

model Team {
  id        Int       @id @default(autoincrement())
  name      String
  areaId    Int
  area      Area      @relation(fields: [areaId], references: [id], onDelete: Cascade)
  processes Process[]
}

model Process {
  id           Int            @id @default(autoincrement())
  title        String
  teamId       Int
  team         Team           @relation(fields: [teamId], references: [id], onDelete: Cascade)
  priority     String
  parentId     Int?
  parent       Process?       @relation("SubProcesses", fields: [parentId], references: [id])
  subProcesses Process[]      @relation("SubProcesses")
  processDocs  ProcessDocs[]
  processTools ProcessTools[]
}

model Doc {
  id          Int           @id @default(autoincrement())
  name        String
  link        String
  processDocs ProcessDocs[]
}

model Tool {
  id           Int            @id @default(autoincrement())
  name         String
  link         String
  image        String
  processTools ProcessTools[]
}

model ProcessDocs {
  id        Int     @id @default(autoincrement())
  processId Int
  docId     Int
  process   Process @relation(fields: [processId], references: [id], onDelete: Cascade)
  doc       Doc     @relation(fields: [docId], references: [id], onDelete: Cascade)
}

model ProcessTools {
  id        Int     @id @default(autoincrement())
  processId Int
  toolId    Int
  purpose   String
  process   Process @relation(fields: [processId], references: [id], onDelete: Cascade)
  tool      Tool    @relation(fields: [toolId], references: [id], onDelete: Cascade)
}
